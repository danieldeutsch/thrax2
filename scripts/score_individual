#!/usr/bin/perl -w
use strict;

sub terminals {
  my $rhs = shift;
  grep { !/,\d+\]$/ } split " ", $rhs;
}

# features that can be calculated for rules in isolation
sub is_purely_lexical { $_[0] !~ /,\d+\]/; }

sub is_only_nts {
  my $rhs = shift;
  my @spaces = $rhs =~ / /g;
  my @nts = $rhs =~ /,\d+\]/g;
  @spaces + 1 == @nts;
}

sub is_monotonic {
  my $tgt = shift;
  my $nt = 1;
  while ($tgt =~ /,(\d+)\]/g) {
    return 0 if ($1 != $nt++);
  }
  return 1;
}

sub has_adjacent_nts { $_[0] =~ /,\d+\] \[\S+,/; }

sub word_cr { $_[0] == 0 or $_[1] == 0 ? 0 : log($_[1] / $_[0]); }

sub score {
  my $rule = shift;
  my ($lhs,$src,$tgt,$alignment,$count,$rest) = split /\t/, $rule, 6;
  my @swords = terminals($src);
  my @twords = terminals($tgt);
  my $sabs = is_only_nts $src;
  my $tabs = is_only_nts $tgt;

  my $result = "phrase_penalty=1";
  $result .= " rarity_penalty=" . exp(1 - $count);
  $result .= " lexical=" . (is_purely_lexical($src) ? 1 : 0);
  $result .= " monotonic=" . (is_monotonic($tgt) ? 1 : 0);
  $result .= " abstract=" . ($sabs and $tabs ? 1 : 0);
  $result .= " adjacent=" . (has_adjacent_nts($src) ? 1 : 0);
  $result .= " x_rule=" . ($lhs eq "[X]" ? 1 : 0);
  $result .= " glue=0";
  $result .= " source_word_count=" . scalar(@swords);
  $result .= " target_word_count=" . scalar(@twords);
  $result .= " word_count_diff=" . (scalar(@twords) - scalar(@swords));
  $result .= " word_cr=" . word_cr(scalar(@swords), scalar(@twords));
  $result .= " identity=" . ($src eq $tgt ? 1 : 0);
  return $result;
}

while (<>) {
  chomp;
  my $scores = score $_;
  print "$_\t$scores\n";
}
